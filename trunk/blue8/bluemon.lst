@ 000
a114    // (000)start: jmp reload
cea0    // (001) lds 0xEA0
8fb8    // (002) call print_msgcr+0xED0
426c    // (003) ds "Blue Monitor 0.4\xFF"
7565    // (004)
204d    // (005)
6f6e    // (006)
6974    // (007)
6f72    // (008)
2030    // (009)
2e34    // (00a)
ff20    // (00b)
8fbe    // (00c)prompt: call print_msg+0xED0
0d0d    // (00d) ds "\r\r\nBLUE> \xFF"
0a42    // (00e)
4c55    // (00f)
453e    // (010)
20ff    // (011)
8fde    // (012) call waitcharecho+0xED0
5fdd    // (013) cmp lf+0xED0 
001a    // (014) snz 
aee2    // (015) jmp prompt0+0xED0
5f64    // (016) cmp space+0xED0 
001a    // (017) snz 
aee2    // (018) jmp prompt0+0xED0
4f54    // (019) ior makelower+0xED0
5f4e    // (01a) cmp cmdl+0xED0 
001a    // (01b) snz 
aef9    // (01c) jmp load+0xED0
5f4f    // (01d) cmp cmdd+0xED0 
001a    // (01e) snz 
af04    // (01f) jmp dump+0xED0
5f50    // (020) cmp cmdg+0xED0 
001a    // (021) snz 
af1e    // (022) jmp go+0xED0
5f51    // (023) cmp cmdi+0xED0 
001a    // (024) snz 
af25    // (025) jmp intel+0xED0
8fb8    // (026) call print_msgcr+0xED0
3fff    // (027) ds "?\xFF"
aedc    // (028) jmp prompt+0xED0
8f65    // (029)load: call hexin4+0xED0 
0009    // (02a) ldxa
8f65    // (02b) call hexin4+0xED0 
6f5c    // (02c) lda numin+0xED0 
f000    // (02d) stax 
0030    // (02e) incx 
6f5f    // (02f) lda hexsep+0xED0 
5f53    // (030) cmp escape+0xED0 
001a    // (031) snz 
aedc    // (032) jmp prompt+0xED0
aefb    // (033) jmp load1+0xED0 
8f65    // (034) call hexin4+0xED0 
0009    // (035) ldxa
0032    // (036) stx 
3f5b    // (037) and bits3+0xED0
0012    // (038) sz
af0e    // (039) jmp dump2+0xED0
6fff    // (03a) lda uart+1
0021    // (03b) spos
aedc    // (03c) jmp prompt+0xED0
8f15    // (03d) call hexaddr+0xED0
e000    // (03e) ldax 
8f9e    // (03f) call hexout4+0xED0 
0025    // (040) ldi ' ' 
0020    // (041)
8fb5    // (042) call printchar+0xED0
0030    // (043) incx 
af06    // (044) jmp dump1+0xED0 
8fb2    // (045) call crlf+0xED0
0032    // (046) stx
8f9e    // (047) call hexout4+0xED0
0025    // (048) ldi ':'
003a    // (049)
8fb5    // (04a) call printchar+0xED0
0025    // (04b) ldi ' '
0020    // (04c)
afb5    // (04d) jmp printchar+0xED0
8f65    // (04e)go: call hexin4+0xED0
6f5f    // (04f) lda hexsep+0xED0 
5f53    // (050) cmp escape+0xED0
001a    // (051) snz
aedc    // (052) jmp prompt+0xED0
6f5c    // (053) lda numin+0xED0 
0033    // (054) jmpa
8fde    // (055)intel: call waitcharecho+0xED0
5f53    // (056) cmp escape+0xED0
001a    // (057) snz
aedc    // (058) jmp prompt+0xED0
5f52    // (059) cmp colon+0xED0
0012    // (05a) sz
af25    // (05b) jmp intel+0xED0
0025    // (05c) ldi 2
0002    // (05d)
8f67    // (05e) call hexinct+0xED0
0007    // (05f) rar 
3f5a    // (060) and hexnib+0xED0 
7f63    // (061) sta icount+0xED0
0025    // (062) ldi 4
0004    // (063)
8f67    // (064) call hexinct+0xED0
0007    // (065) rar 
0050    // (066) push
0042    // (067) popx
0025    // (068) ldi 2
0002    // (069)
8f67    // (06a) call hexinct+0xED0
1f56    // (06b) add hexzero+0xED0
0012    // (06c) sz
af49    // (06d) jmp inteldone+0xED0
0025    // (06e) ldi 4
0004    // (06f)
8f67    // (070) call hexinct+0xED0
f000    // (071) stax
0030    // (072) incx
6f63    // (073) lda icount+0xED0
0006    // (074) deca
7f63    // (075) sta icount+0xED0
0012    // (076) sz
af3e    // (077) jmp intelloop+0xED0
af25    // (078) jmp intel+0xED0 
8fde    // (079) call waitcharecho+0xED0
5fdd    // (07a) cmp lf+0xED0
0012    // (07b) sz
af49    // (07c) jmp inteldone+0xED0
aedc    // (07d) jmp prompt+0xED0
006c    // (07e)cmdl: dw 'l'
0064    // (07f)cmdd: dw 'd'
0067    // (080)cmdg: dw 'g'
0069    // (081)cmdi: dw 'i'
003a    // (082)colon: dw ':'
001b    // (083)escape: dw 0x1b
0020    // (084)makelower: dw 0x20
0030    // (085)zero: dw '0'
0000    // (086)hexzero: dw 0
0039    // (087)nine: dw '9'
0061    // (088)hexa: dw 'a'
fff0    // (089)hexmask: dw 0xFFF0
000f    // (08a)hexnib: dw 0xF
0007    // (08b)bits3: dw 0x7
0000    // (08c)numin: dw 0
0000    // (08d)hextmp: dw 0
0000    // (08e)hextmp2: dw 0
0000    // (08f)hexsep: dw 0 
0008    // (090)bs: dw 8
0004    // (091)hexct: dw 4
0fff    // (092)mask3: dw 0xFFF
0000    // (093)icount: dw 0
0020    // (094)space: dw ' '
0025    // (095)hexin4: ldi 0xFFFF
ffff    // (096)
7f61    // (097) sta hexct+0xED0
0025    // (098) ldi 0 
0000    // (099)
7f5c    // (09a) sta numin+0xED0 
8fde    // (09b) call waitcharecho+0xED0 
5f64    // (09c) cmp space+0xED0 
001a    // (09d) snz 
af6b    // (09e) jmp hexinl+0xED0
af71    // (09f) jmp _location_+2+0xED0
8fde    // (0a0)hexinl2: call waitcharecho+0xED0 
5f60    // (0a1) cmp bs+0xED0
001a    // (0a2) snz
af96    // (0a3) jmp hexbs+0xED0
5f55    // (0a4) cmp zero+0xED0 
001a    // (0a5) snz
af84    // (0a6) jmp hexin09+0xED0
0014    // (0a7) sc
af93    // (0a8) jmp hexin4done+0xED0
5f57    // (0a9) cmp nine+0xED0 
0014    // (0aa) sc
af84    // (0ab) jmp hexin09+0xED0
001a    // (0ac) snz
af84    // (0ad) jmp hexin09+0xED0
4f54    // (0ae) ior makelower+0xED0 
9f58    // (0af) sub hexa+0xED0
0014    // (0b0) sc
af93    // (0b1) jmp hexin4done+0xED0
1fdd    // (0b2) add lf+0xED0
af85    // (0b3) jmp _location_+2+0xED0 
9f55    // (0b4) sub zero+0xED0
7f5d    // (0b5) sta hextmp+0xED0
6f5c    // (0b6) lda numin+0xED0 
0003    // (0b7) ral
0003    // (0b8) ral
0003    // (0b9) ral
0003    // (0ba) ral
3f59    // (0bb) and hexmask+0xED0
4f5d    // (0bc) ior hextmp+0xED0 
7f5c    // (0bd) sta numin+0xED0 
6f61    // (0be) lda hexct+0xED0
0006    // (0bf) deca
7f61    // (0c0) sta hexct+0xED0
0012    // (0c1) sz
af70    // (0c2) jmp hexinl2+0xED0
7f5f    // (0c3) sta hexsep+0xED0 
6f5c    // (0c4) lda numin+0xED0 
0041    // (0c5) ret
6f5c    // (0c6)hexbs: lda numin+0xED0
0007    // (0c7) rar
0007    // (0c8) rar
0007    // (0c9) rar
0007    // (0ca) rar
3f62    // (0cb) and mask3+0xED0
7f5c    // (0cc) sta numin+0xED0
af70    // (0cd) jmp hexinl2+0xED0
7f5d    // (0ce)hexout4: sta hextmp+0xED0
0034    // (0cf)  swap
8fa2    // (0d0)  call hexout2+0xED0
6f5d    // (0d1)  lda hextmp+0xED0
7f5e    // (0d2)hexout2: sta hextmp2+0xED0
0007    // (0d3)  rar
0007    // (0d4)  rar
0007    // (0d5)  rar
0007    // (0d6)  rar
8fa9    // (0d7)  call hexout1+0xED0
6f5e    // (0d8)  lda hextmp2+0xED0
3f5a    // (0d9)hexout1: and hexnib+0xED0
5fdd    // (0da)  cmp lf+0xED0
001c    // (0db)  snc
afaf    // (0dc)  jmp hexouta+0xED0
1f55    // (0dd)  add zero+0xED0
afb5    // (0de)  jmp printchar+0xED0
9fdd    // (0df)hexouta: sub lf+0xED0
1f58    // (0e0)  add hexa+0xED0
afb5    // (0e1)  jmp printchar+0xED0 
6fdc    // (0e2) lda cr+0xED0
8fb5    // (0e3) call printchar+0xED0
6fdd    // (0e4) lda lf+0xED0
8fd0    // (0e5) call xmitwait+0xED0
7fff    // (0e6) sta uart+1
0041    // (0e7) ret
0042    // (0e8) popx
8fc3    // (0e9) call print_msgx+0xED0
8fb2    // (0ea) call crlf+0xED0
0030    // (0eb) incx
0052    // (0ec) pushx
0041    // (0ed) ret
0042    // (0ee) popx
8fc3    // (0ef) call print_msgx+0xED0
0030    // (0f0) incx
0052    // (0f1) pushx
0041    // (0f2) ret
e000    // (0f3) ldax 0
0021    // (0f4) spos
0041    // (0f5) ret
0034    // (0f6) swap
8fb5    // (0f7) call printchar+0xED0
e000    // (0f8) ldax 0
0034    // (0f9) swap
0021    // (0fa) spos
0041    // (0fb) ret
0034    // (0fc) swap
8fb5    // (0fd) call printchar+0xED0
0030    // (0fe) incx
afc3    // (0ff) jmp print_msgx+0xED0
0050    // (100) push
6ffe    // (101)  lda uart
0020    // (102) sneg
afd1    // (103) jmp xmitwait+1+0xED0
0040    // (104) pop
0041    // (105) ret
6fff    // (106) lda uart+1
0020    // (107) sneg
afd6    // (108) jmp waitchar+0xED0
3fdb    // (109) and ff+0xED0
0041    // (10a) ret
00ff    // (10b)ff: dw 0xFF
000d    // (10c)cr: dw 0x0d
000a    // (10d)lf: dw 0x0a
8fd6    // (10e) call waitchar+0xED0
8fb5    // (10f) call printchar+0xED0
5fdc    // (110) cmp cr+0xED0
001a    // (111) snz
8fb2    // (112) call crlf+0xED0
0041    // (113) ret
b000    // (114)reload: ldx 0
e000    // (115) ldax 0
fed0    // (116) stax 0xED0
0030    // (117) incx
0032    // (118) stx
911d    // (119) sub limit
0012    // (11a) sz
a115    // (11b) jmp reloadx
aed1    // (11c) jmp 0xED1
0114    // (11d)limit: dw reload
// Symbols
// printchar: 00e5
// uart: 0ffe
// hexsep: 008f
// hexaddr: 0045
// cr: 010c
// swreg: 0ff0
// load: 0029
// hexin4: 0095
// print_msgx: 00f3
// load1: 002b
// hexin4done: 00c3
// waitcharecho: 010e
// prompt: 000c
// colon: 0082
// hexbs: 00c6
// cmdl: 007e
// start: 0000
// hexinct: 0097
// numin: 008c
// hexnib: 008a
// inteldone: 0079
// bs: 0090
// reloadx: 0115
// zero: 0085
// dump1: 0036
// lf: 010d
// hexouta: 00df
// bits3: 008b
// hexct: 0091
// hexin09: 00b4
// hexzero: 0086
// hextmp: 008d
// cmdi: 0081
// hextmp2: 008e
// escape: 0083
// print_msg: 00ee
// ff: 010b
// cmdg: 0080
// dump2: 003e
// hexout1: 00d9
// xmitwait: 0100
// crlf: 00e2
// icount: 0093
// waitchar: 0106
// hexinl2: 00a0
// dump: 0034
// hexout4: 00ce
// reload: 0114
// intelloop: 006e
// prompt0: 0012
// hexinl: 009b
// limit: 011d
// nine: 0087
// intel: 0055
// mask3: 0092
// hexout2: 00d2
// makelower: 0084
// space: 0094
// hexmask: 0089
// go: 004e
// print_msgcr: 00e8
// hexa: 0088
// cmdd: 007f
// End Symbols
